name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build Jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "17"
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Run Gradle Release
        run: ./gradlew release
      - name: Upload tag number
        uses: actions/upload-artifact@v2
        with:
          name: tag
          path: tag.txt
      - name: Upload dockerfile
        uses: actions/upload-artifact@v2
        with:
          name: dockerfile
          path: dockerfile
      - name: Upload release text
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: release.txt
      - name: Upload build.gradle
        uses: actions/upload-artifact@v2
        with:
          name: gradle
          path: build.gradle.kts
      - name: Set Environment
        run: |
          echo "TAG_NUMBER=$(cat tag.txt)" >> $GITHUB_ENV
          echo "RELEASE=$(cat release.txt)" >> $GITHUB_ENV
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: ./build/libs/*.jar
  container:
    name: Build Container
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download tag
        uses: actions/download-artifact@v2
        with:
          name: tag
      - name: Download release
        uses: actions/download-artifact@v2
        with:
          name: release
      - name: Download Jar
        uses: actions/download-artifact@v2
        with:
          name: jar
      - name: Set Environment
        run: |
          echo "TAG_NUMBER=$(cat tag.txt)" >> $GITHUB_ENV
          echo "RELEASE=$(cat release.txt)" >> $GITHUB_ENV
          echo "JAR=$(echo *.jar)" >> $GITHUB_ENV
      - name: Download dockerfile
        uses: actions/download-artifact@v2
        with:
          name: dockerfile
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Lowercase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          build-args: JAR_NAME=${{ env.JAR }}
          tags: |
            docker.pkg.github.com/${{ env.REPO }}/api-image:${{ env.RELEASE }}
  version:
    name: Bump Version Number
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Download tag
        uses: actions/download-artifact@v2
        with:
          name: gradle
      - name: Commit release changes
        uses: EndBug/add-and-commit@v7
        with:
          message: "[ci skip] Bump version number"
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
  tag:
    name: Create a GitHub tag
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download tag
        uses: actions/download-artifact@v2
        with:
          name: tag
      - name: Set Environment
        run: echo "TAG_NUMBER=$(cat tag.txt)" >> $GITHUB_ENV
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.TAG_NUMBER }}',
              sha: context.sha
            })